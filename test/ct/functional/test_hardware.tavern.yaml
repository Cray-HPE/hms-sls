# MIT License
#
# (C) Copyright [2021-2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the SLS hardware API
# Author: Mitch Schooler
# Service: System Layout Service

# HMS test metrics test cases: 4
# 1. GET /hardware API response code
# 2. GET /hardware API response body
# 3. GET /hardware/{xname} API response code
# 4. GET /hardware/{xname} API response body
---
test_name: Verify the hardware resource

stages:
  # 1. GET /hardware API response code
  # 2. GET /hardware API response body
  - name: Ensure that the SLS hardware can be retrieved
    request:
      url: "{sls_base_url}/v1/hardware"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: seq
            matching: all
            sequence:
              - type: map
                required: True
                mapping:
                  Parent:
                    type: str
                    required: True
                    pattern: "^[xs].+"
                  Children:
                    type: seq
                    required: False
                    matching: all
                    sequence:
                      - type: str
                        pattern: "^[xs].+"
                  Xname:
                    type: str
                    required: True
                    pattern: "^[xs].+"
                  Type:
                    type: str
                    required: True
                    pattern: "^comptype_.+"
                  Class:
                    type: str
                    required: True
                    enum:
                      - "River"
                      - "Mountain"
                  TypeString:
                    type: str
                    required: True
                    #TODO: MgmtHLSwitch not found in this pattern from SLS documentation
                    #pattern: "^CDU$|^CabinetCDU$|^Cabinet$|^CabinetBMC$|^CabinetPDUController$|^CabinetPDU$|^CabinetPDUNic$|^CabinetPDUOutlet$|^Chassis$|^ChassisBMC$|^CMMRectifier$|^CMMFpga$|^CEC$|^ComputeModule$|^RouterModule$|^NodeBMC$|^NodeBMCNic$|^NodeEnclosure$|^NodePowerConnector$|^Node$|^Processor$|^NodeNIC$|^NodeHsnNIC$|^Memory$|^NodeAccel$|^NodeFpga$|^HSNAsic$|^RouterFpga$|^RouterTORFpga$|^RouterBMC$|^RouterBMCNic$|^HSNBoard$|^HSNLink$|^HSNConnector$|^HSNConnectorPort$|^MgmtSwitch$|^MgmtSwitchConnector$|^SMSBox$|^System$"
                    pattern: "^CDU$|^CabinetCDU$|^Cabinet$|^CabinetBMC$|^CabinetPDUController$|^CabinetPDU$|^CabinetPDUNic$|^CabinetPDUOutlet$|^Chassis$|^ChassisBMC$|^CMMRectifier$|^CMMFpga$|^CEC$|^ComputeModule$|^RouterModule$|^NodeBMC$|^NodeBMCNic$|^NodeEnclosure$|^NodePowerConnector$|^Node$|^Processor$|^NodeNIC$|^NodeHsnNIC$|^Memory$|^NodeAccel$|^NodeFpga$|^HSNAsic$|^RouterFpga$|^RouterTORFpga$|^RouterBMC$|^RouterBMCNic$|^HSNBoard$|^HSNLink$|^HSNConnector$|^HSNConnectorPort$|^MgmtHLSwitch$|^MgmtSwitch$|^MgmtSwitchConnector$|^SMSBox$|^System$"
                  LastUpdated:
                    type: int
                    required: True
                  LastUpdatedTime:
                    type: str
                    required: True
                    #TODO
                    #pattern: "[0-9]{{4}}-[0-9]{{2}}-[0-9]{{2}} [0-9]{{2}}:[0-9]{{2}}:[0-9]{{2}}.[0-9]+ \\+[0-9]{{4}} \\+[0-9]{{4}}"
                    pattern: "[0-9]{{4}}-[0-9]{{2}}-[0-9]{{2}} [0-9]{{2}}:[0-9]{{2}}:[0-9]{{2}}.[0-9]+ \\+[0-9]{{4}} UTC"
                  ExtraProperties:
                    type: map
                    required: False
                    allowempty: True
                    mapping:
                      Aliases:
                        type: seq
                        required: False
                        matching: all
                        sequence:
                          - type: str
                      Brand:
                        type: str
                        required: False
                      IP4addr:
                        type: str
                        required: False
                      Networks:
                        type: map
                        required: False
                        allowempty: True
                        mapping:
                          cn:
                            type: map
                            required: False
                            allowempty: True
                            mapping:
                              HMN:
                                type: map
                                required: False
                                mapping:
                                  CIDR:
                                    type: str
                                    required: True
                                  Gateway:
                                    type: str
                                    required: True
                                  VLan:
                                    type: int
                                    required: True
                      NID:
                        type: int
                        required: False
                      NodeNics:
                        type: seq
                        required: False
                        matching: all
                        sequence:
                          - type: str
                            pattern: "^[xs].+"
                      Password:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SNMPAuthPassword:
                        type: str
                        required: False
                      SNMPAuthProtocol:
                        type: str
                        required: False
                      SNMPPrivPassword:
                        type: str
                        required: False
                      SNMPPrivProtocol:
                        type: str
                        required: False
                      SNMPUsername:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      Username:
                        type: str
                        required: False
                      VendorName:
                        type: str
                        required: False
---
test_name: Verify the hardware resource with a specific xname

stages:
  - name: Get an xname from the HSM Components collection to use in the next stage
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          xname: Components[0].ID

  # 3. GET /hardware/{xname} API response code
  # 4. GET /hardware/{xname} API response body
  - name: Ensure that the SLS hardware for a specific xname can be retrieved
    request:
      url: "{sls_base_url}/v1/hardware/{xname}"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Parent:
                type: str
                required: True
                pattern: "^[xs].+"
              Children:
                type: seq
                required: False
                matching: all
                sequence:
                  - type: str
                    pattern: "^[xs].+"
              Xname:
                type: str
                required: True
                pattern: "^[xs].+"
              Type:
                type: str
                required: True
                pattern: "^comptype_.+"
              Class:
                type: str
                required: True
                enum:
                  - "River"
                  - "Mountain"
              TypeString:
                type: str
                required: True
                #TODO: MgmtHLSwitch not found in this pattern from SLS documentation
                #pattern: "^CDU$|^CabinetCDU$|^Cabinet$|^CabinetBMC$|^CabinetPDUController$|^CabinetPDU$|^CabinetPDUNic$|^CabinetPDUOutlet$|^Chassis$|^ChassisBMC$|^CMMRectifier$|^CMMFpga$|^CEC$|^ComputeModule$|^RouterModule$|^NodeBMC$|^NodeBMCNic$|^NodeEnclosure$|^NodePowerConnector$|^Node$|^Processor$|^NodeNIC$|^NodeHsnNIC$|^Memory$|^NodeAccel$|^NodeFpga$|^HSNAsic$|^RouterFpga$|^RouterTORFpga$|^RouterBMC$|^RouterBMCNic$|^HSNBoard$|^HSNLink$|^HSNConnector$|^HSNConnectorPort$|^MgmtSwitch$|^MgmtSwitchConnector$|^SMSBox$|^System$"
                pattern: "^CDU$|^CabinetCDU$|^Cabinet$|^CabinetBMC$|^CabinetPDUController$|^CabinetPDU$|^CabinetPDUNic$|^CabinetPDUOutlet$|^Chassis$|^ChassisBMC$|^CMMRectifier$|^CMMFpga$|^CEC$|^ComputeModule$|^RouterModule$|^NodeBMC$|^NodeBMCNic$|^NodeEnclosure$|^NodePowerConnector$|^Node$|^Processor$|^NodeNIC$|^NodeHsnNIC$|^Memory$|^NodeAccel$|^NodeFpga$|^HSNAsic$|^RouterFpga$|^RouterTORFpga$|^RouterBMC$|^RouterBMCNic$|^HSNBoard$|^HSNLink$|^HSNConnector$|^HSNConnectorPort$|^MgmtHLSwitch$|^MgmtSwitch$|^MgmtSwitchConnector$|^SMSBox$|^System$"
              LastUpdated:
                type: int
                required: True
              LastUpdatedTime:
                type: str
                required: True
                #TODO
                #pattern: "[0-9]{{4}}-[0-9]{{2}}-[0-9]{{2}} [0-9]{{2}}:[0-9]{{2}}:[0-9]{{2}}.[0-9]+ \\+[0-9]{{4}} \\+[0-9]{{4}}"
                pattern: "[0-9]{{4}}-[0-9]{{2}}-[0-9]{{2}} [0-9]{{2}}:[0-9]{{2}}:[0-9]{{2}}.[0-9]+ \\+[0-9]{{4}} UTC"
              ExtraProperties:
                type: map
                required: False
                allowempty: True
                mapping:
                  Aliases:
                    type: seq
                    required: False
                    matching: all
                    sequence:
                      - type: str
                  Brand:
                    type: str
                    required: False
                  IP4addr:
                    type: str
                    required: False
                  Networks:
                    type: map
                    required: False
                    allowempty: True
                    mapping:
                      cn:
                        type: map
                        required: False
                        allowempty: True
                        mapping:
                          HMN:
                            type: map
                            required: False
                            mapping:
                              CIDR:
                                type: str
                                required: True
                              Gateway:
                                type: str
                                required: True
                              VLan:
                                type: int
                                required: True
                  NID:
                    type: int
                    required: False
                  NodeNics:
                    type: seq
                    required: False
                    matching: all
                    sequence:
                      - type: str
                        pattern: "^[xs].+"
                  Password:
                    type: str
                    required: False
                  Role:
                    type: str
                    required: False
                  SNMPAuthPassword:
                    type: str
                    required: False
                  SNMPAuthProtocol:
                    type: str
                    required: False
                  SNMPPrivPassword:
                    type: str
                    required: False
                  SNMPPrivProtocol:
                    type: str
                    required: False
                  SNMPUsername:
                    type: str
                    required: False
                  SubRole:
                    type: str
                    required: False
                  Username:
                    type: str
                    required: False
                  VendorName:
                    type: str
                    required: False
